description: The following analytic identifies anomalous inbound network traffic volumes
  from processes within containerized workloads. It leverages Network Performance
  Monitoring metrics collected via an OTEL collector and pulled from Splunk Observability
  Cloud. The detection compares recent metrics (tcp.bytes, tcp.new_sockets, tcp.packets,
  udp.bytes, udp.packets) over the last hour with the average over the past 30 days.
  This activity is significant as it may indicate unauthorized data reception, potential
  breaches, vulnerability exploitation, or malware propagation. If confirmed malicious,
  it could lead to command and control installation, data integrity damage, container
  escape, and further environment compromise.
required_fields:
- tcp.*
- udp.*
- k8s.cluster.name
- dest.process.name
- dest.workload.name
rule: '| mstats avg(tcp.*) as tcp.* avg(udp.*) as udp.* where index=kubernetes_metrics
  AND earliest=-1h by k8s.cluster.name dest.workload.name dest.process.name  span=10s
  | eval key=''dest.workload.name'' + ":" + ''dest.process.name'' | join type=left
  key [ mstats avg(tcp.*) as avg_tcp.* avg(udp.*) as avg_udp.* stdev(tcp.*) as stdev_tcp.*
  avg(udp.*) as stdev_udp.* where index=kubernetes_metrics AND earliest=-30d latest=-1h
  by dest.workload.name dest.process.name | eval key=''dest.workload.name'' + ":"
  + ''dest.process.name'' ] | eval anomalies = "" | foreach stdev_* [ eval anomalies
  =if( ''<<MATCHSTR>>'' > (''avg_<<MATCHSTR>>'' + 3 * ''stdev_<<MATCHSTR>>''), anomalies
  + "<<MATCHSTR>> higher than average by " + tostring(round((''<<MATCHSTR>>'' - ''avg_<<MATCHSTR>>'')/''stdev_<<MATCHSTR>>''
  ,2)) + " Standard Deviations. <<MATCHSTR>>=" + tostring(''<<MATCHSTR>>'') + " avg_<<MATCHSTR>>="
  + tostring(''avg_<<MATCHSTR>>'') + " ''stdev_<<MATCHSTR>>''=" + tostring(''stdev_<<MATCHSTR>>'')
  + ", " , anomalies) ] | fillnull | eval anomalies = split(replace(anomalies, ",\s$$$$",
  "") ,", ") | where anomalies!="" | stats count(anomalies) as count values(anomalies)
  as anomalies by k8s.cluster.name dest.workload.name dest.process.name | where count
  > 5 | rename k8s.cluster.name as host | `kubernetes_anomalous_inbound_network_activity_from_process_filter`'
