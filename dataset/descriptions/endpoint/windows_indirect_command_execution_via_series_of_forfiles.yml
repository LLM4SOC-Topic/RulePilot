description: The following analytic detects excessive usage of the forfiles.exe process,
  which is often indicative of post-exploitation activities. The detection leverages
  data from Endpoint Detection and Response (EDR) agents, focusing on process execution
  logs that include process GUID, process name, and parent process. This activity
  is significant because forfiles.exe can be abused to execute commands on multiple
  files, a technique used by ransomware like Prestige. If confirmed malicious, this
  behavior could allow attackers to enumerate files, potentially leading to data exfiltration
  or further malicious actions.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.parent_process
- Processes.original_file_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_path
- Processes.process_path
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` values(Processes.process) as process values(Processes.process_guid)
  as process_guid  values(Processes.process_name) as process_name count min(_time)
  as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where Processes.process_name
  = "forfiles.exe" OR Processes.original_file_name = "forfiles.exe" by Processes.parent_process_name
  Processes.parent_process Processes.dest Processes.user _time span=1m | where count
  >=20 | `drop_dm_object_name(Processes)` | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `windows_indirect_command_execution_via_series_of_forfiles_filter`'
