description: The following analytic detects the use of the LD_PRELOAD environment
  variable to hijack or hook library functions on a Linux platform. It leverages data
  from Linux Auditd, focusing on process execution logs that include command-line
  details. This activity is significant because adversaries, malware authors, and
  red teamers commonly use this technique to gain elevated privileges and establish
  persistence on a compromised machine. If confirmed malicious, this behavior could
  allow attackers to execute arbitrary code, escalate privileges, and maintain long-term
  access to the system.
required_fields:
- _time
- argc
- process_exec
rule: sourcetype="linux:audit" type=EXECVE | eval relevant_fields=if(type="EXECVE",
  "", relevant_fields) | foreach a* [eval relevant_fields=if(type="EXECVE", mvappend(relevant_fields,
  '<<FIELD>>'), relevant_fields)] | eval process_exec=if(type="EXECVE", mvjoin(relevant_fields,
  " "), process_exec) | eval process_exec=if(type="EXECVE", trim(process_exec), process_exec)
  | rename host as dest | where LIKE (process_exec, "%LD_PRELOAD%")| stats count min(_time)
  as firstTime max(_time) as lastTime by argc process_exec dest | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$)| convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)| `linux_auditd_preload_hijack_library_calls_filter`
