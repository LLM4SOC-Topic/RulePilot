description: The following analytic identifies instances where the regsvr32.exe binary
  has been renamed and executed. This detection leverages Endpoint Detection and Response
  (EDR) data, specifically focusing on the original filename metadata. Renaming regsvr32.exe
  is significant as it can be an evasion technique used by attackers to bypass security
  controls. If confirmed malicious, this activity could allow an attacker to execute
  arbitrary DLLs, potentially leading to code execution, privilege escalation, or
  persistence within the environment.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.parent_process
- Processes.original_file_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_path
- Processes.process_path
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime max(_time) as lastTime
  from datamodel=Endpoint.Processes where Processes.process_name != regsvr32.exe AND
  Processes.original_file_name=regsvr32.exe by Processes.dest Processes.user Processes.parent_process_name
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  Processes.original_file_name | `drop_dm_object_name(Processes)` | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `windows_regsvr32_renamed_binary_filter`'
