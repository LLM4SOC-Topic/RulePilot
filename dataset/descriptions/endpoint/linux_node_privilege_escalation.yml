description: The following analytic identifies the execution of Node.js with elevated
  privileges using sudo, specifically when spawning child processes. It leverages
  data from Endpoint Detection and Response (EDR) agents, focusing on command-line
  executions that include specific Node.js commands. This activity is significant
  because running Node.js as a superuser without dropping privileges can allow unauthorized
  access to the file system and potential privilege escalation. If confirmed malicious,
  this could enable an attacker to maintain privileged access, execute arbitrary code,
  and compromise sensitive data within the environment.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime max(_time) as lastTime
  from datamodel=Endpoint.Processes where Processes.process="*sudo*node*" AND Processes.process="*-e*"
  AND Processes.process="*child_process.spawn*" AND Processes.process="*stdio*" by
  Processes.dest Processes.user Processes.parent_process_name Processes.process_name
  Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid
  | `drop_dm_object_name(Processes)` | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)
  | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `linux_node_privilege_escalation_filter`'
