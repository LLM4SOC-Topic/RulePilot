description: The following analytic detects PowerShell processes initiated with parameters
  that bypass the local execution policy for scripts. It leverages data from Endpoint
  Detection and Response (EDR) agents, focusing on command-line executions containing
  specific flags like "-ex" or "bypass." This activity is significant because bypassing
  execution policies is a common tactic used by attackers to run malicious scripts
  undetected. If confirmed malicious, this could allow an attacker to execute arbitrary
  code, potentially leading to further system compromise, data exfiltration, or persistent
  access within the environment.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.parent_process
- Processes.original_file_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_path
- Processes.process_path
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` values(Processes.process_id) as process_id, values(Processes.parent_process_id)
  as parent_process_id values(Processes.process) as process min(_time) as firstTime
  max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=pwsh.exe
  OR Processes.process_name=sqlps.exe OR Processes.process_name=sqltoolsps.exe OR
  Processes.process_name=powershell.exe OR Processes.process_name=powershell_ise.exe
  OR Processes.original_file_name=pwsh.dll OR Processes.original_file_name=PowerShell.EXE
  OR Processes.original_file_name=powershell_ise.EXE) (Processes.process="* -ex*"
  OR Processes.process="* bypass *") by Processes.process_id, Processes.user, Processes.dest
  | `drop_dm_object_name(Processes)` | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)
  | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `malicious_powershell_process___execution_policy_bypass_filter`'
