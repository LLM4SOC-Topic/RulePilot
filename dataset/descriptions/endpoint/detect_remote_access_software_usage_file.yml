description: The following analytic detects the writing of files from known remote
  access software to disk within the environment. It leverages data from Endpoint
  Detection and Response (EDR) agents, focusing on file path, file name, and user
  information. This activity is significant as adversaries often use remote access
  tools like AnyDesk, GoToMyPC, LogMeIn, and TeamViewer to maintain unauthorized access.
  If confirmed malicious, this could allow attackers to persist in the environment,
  potentially leading to data exfiltration, further compromise, or complete control
  over affected systems.
required_fields:
- _time
- Filesystem.dest
- Filesystem.user
- Filesystem.file_name
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count, min(_time) as firstTime, max(_time) as lastTime,
  values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by
  Filesystem.dest, Filesystem.user, Filesystem.file_name | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `drop_dm_object_name(Filesystem)`
  | lookup remote_access_software remote_utility AS file_name OUTPUT isutility, description
  as signature, comment_reference as desc, category | search isutility = TRUE | eval
  exception_asset = CASE(isnotnull(src),src,isnotnull(dest),dest) | lookup update=true
  asset_lookup_by_str asset as exception_asset OUTPUTNEW asset as asset_temp_field
  | eval asset_temp_field = CASE(isnull(asset_temp_field),exception_asset,true(),asset_temp_field
  ) | lookup remote_access_software_exceptions asset as asset_temp_field software
  as signature OUTPUT exception as rmm_exception, exception_date as rmm_exception_date,
  exception_ttl_days as rmm_exception_ttl_days, comment as rmm_exception_comment |
  eval rmm_exception = mvdedup(mvfilter(NOT match(rmm_exception,"false"))), rmm_exception_date
  = mvdedup(mvfilter(NOT match(rmm_exception_date,"false"))), rmm_exception_ttl_days
  = mvdedup(mvfilter(NOT match(rmm_exception_ttl_days,"false"))), rmm_exception_comment
  = mvdedup(mvfilter(NOT match(rmm_exception_comment,"false"))), rmm_exception_end_date
  = relative_time(strptime(rmm_exception_date, "%Y-%m-%d"), "+"+rmm_exception_ttl_days+"d"),
  rmm_exception_end = CASE((now() >= rmm_exception_end_date),"TRUE",(now() < rmm_exception_end_date),"FALSE",(match(rmm_exception,"(?i)true")
  AND isnull(rmm_exception_ttl_days)),"UNLIMITED") | search NOT (rmm_exception = TRUE
  AND rmm_exception_end IN ("FALSE","UNLIMITED")) | fields - asset_temp_field,exception_asset
  | `detect_remote_access_software_usage_file_filter`'
