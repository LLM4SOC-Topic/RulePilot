description: The following analytic detects the use of procdump.exe to dump the LSASS
  process, specifically looking for the -mm and -ma command-line arguments. It leverages
  data from Endpoint Detection and Response (EDR) agents, focusing on process names,
  command-line executions, and parent processes. This activity is significant because
  dumping LSASS can expose sensitive credentials, posing a severe security risk. If
  confirmed malicious, an attacker could obtain credentials, escalate privileges,
  and move laterally within the network, leading to potential data breaches and further
  compromise of the environment.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime max(_time) as lastTime
  from datamodel=Endpoint.Processes where (Processes.process_name=procdump.exe OR
  Processes.process_name=procdump64.exe OR Processes.original_file_name=procdump)
  (Processes.process=*-ma* OR Processes.process=*-mm*) Processes.process=*lsass* by
  Processes.user Processes.parent_process_name Processes.process_name Processes.process
  Processes.original_file_name Processes.dest | `drop_dm_object_name(Processes)` |
  convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | `dump_lsass_via_procdump_filter`'
