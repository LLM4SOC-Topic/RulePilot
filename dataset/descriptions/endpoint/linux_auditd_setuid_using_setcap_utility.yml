description: The following analytic detects the execution of the 'setcap' utility
  to enable the SUID bit on Linux systems. It leverages Linux Auditd data, focusing
  on process names and command-line arguments that indicate the use of 'setcap' with
  specific capabilities. This activity is significant because setting the SUID bit
  allows a user to temporarily gain root access, posing a substantial security risk.
  If confirmed malicious, an attacker could escalate privileges, execute arbitrary
  commands with elevated permissions, and potentially compromise the entire system.
required_fields:
- _time
- argc
- process_exec
rule: sourcetype="linux:audit" type=EXECVE | eval relevant_fields=if(type="EXECVE",
  "", relevant_fields) | foreach a* [eval relevant_fields=if(type="EXECVE", mvappend(relevant_fields,
  '<<FIELD>>'), relevant_fields)] | eval process_exec=if(type="EXECVE", mvjoin(relevant_fields,
  " "), process_exec) | eval process_exec=if(type="EXECVE", trim(process_exec), process_exec)
  | rename host as dest | where LIKE (process_exec, "%setcap %") AND (LIKE (process_exec,
  "% cap_setuid+ep %") OR LIKE (process_exec, "% cap_setuid=ep %") OR LIKE (process_exec,
  "% cap_net_bind_service+p %") OR LIKE (process_exec, "% cap_net_raw+ep %") OR LIKE
  (process_exec, "% cap_dac_read_search+ep %")) | stats count min(_time) as firstTime
  max(_time) as lastTime by argc process_exec dest | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$)| convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)| `linux_auditd_setuid_using_setcap_utility_filter`
