description: The following analytic detects potential credential dumping by identifying
  specific GrantedAccess permission requests and CallTrace DLLs targeting the LSASS
  process. It leverages Sysmon EventCode 10 logs, focusing on access requests to lsass.exe
  and call traces involving debug and native API DLLs like dbgcore.dll, dbghelp.dll,
  and ntdll.dll. This activity is significant as credential dumping can lead to unauthorized
  access to sensitive credentials. If confirmed malicious, attackers could gain elevated
  privileges and persist within the environment, posing a severe security risk.
required_fields:
- _time
- dest
- TargetImage
- GrantedAccess
- SourceImage
- SourceProcessId
- SourceUser
- TargetUser
rule: sourcetype=XmlWinEventLog:Microsoft-Windows-Sysmon/Operational OR source=XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
  OR source=Syslog:Linux-Sysmon/Operational EventCode=10 TargetImage=*\\lsass.exe
  granted_access IN ("0x01000", "0x1010", "0x1038", "0x40", "0x1400", "0x1fffff",
  "0x1410", "0x143a", "0x1438", "0x1000") CallTrace IN ("*dbgcore.dll*", "*dbghelp.dll*",
  "*ntdll.dll*", "*kernelbase.dll*", "*kernel32.dll*") NOT SourceUser IN ("NT AUTHORITY\\SYSTEM",
  "NT AUTHORITY\\NETWORK SERVICE") | stats count min(_time) as firstTime max(_time)
  as lastTime by dest, SourceImage, GrantedAccess, TargetImage, SourceProcessId, SourceUser,
  TargetUser | rename SourceUser as user | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `windows_possible_credential_dumping_filter`
