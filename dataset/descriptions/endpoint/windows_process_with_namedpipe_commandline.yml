description: The following analytic detects processes with command lines containing
  named pipes. It leverages data from Endpoint Detection and Response (EDR) agents,
  focusing on process command-line executions. This behavior is significant as it
  is often used by adversaries, such as those behind the Olympic Destroyer malware,
  for inter-process communication post-injection, aiding in defense evasion and privilege
  escalation. If confirmed malicious, this activity could allow attackers to maintain
  persistence, escalate privileges, or evade defenses, potentially leading to further
  compromise of the system.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.parent_process
- Processes.original_file_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_path
- Processes.process_path
- Processes.parent_process_id
- Processes.process_guid
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime max(_time) as lastTime
  from datamodel=Endpoint.Processes where Processes.process = "*\\\\.\\pipe\\*" NOT
  (Processes.process_path IN ("*\\program files*")) by Processes.parent_process_name
  Processes.parent_process Processes.process_name Processes.process Processes.original_file_name
  Processes.process_id Processes.parent_process_path Processes.process_guid Processes.parent_process_id
  Processes.dest Processes.user Processes.process_path | `drop_dm_object_name(Processes)`
  | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) | `windows_process_with_namedpipe_commandline_filter`'
