description: The following analytic detects the execution of `powershell.exe` with
  command-line arguments that utilize `Get-DomainComputer` to discover remote systems.
  This detection leverages data from Endpoint Detection and Response (EDR) agents,
  focusing on process names and command-line executions. This activity is significant
  as `Get-DomainComputer` is part of PowerView, a tool often used by adversaries for
  domain enumeration and situational awareness. If confirmed malicious, this activity
  could allow attackers to map out the network, identify critical systems, and plan
  further attacks, potentially leading to unauthorized access and data exfiltration.
required_fields:
- Processes.dest
- Processes.user
- Processes.parent_process_name
- Processes.parent_process
- Processes.original_file_name
- Processes.process_name
- Processes.process
- Processes.process_id
- Processes.parent_process_path
- Processes.process_path
- Processes.parent_process_id
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime max(_time) as lastTime
  from datamodel=Endpoint.Processes where (Processes.process_name="powershell.exe")
  (Processes.process=*Get-DomainComputer*) by Processes.dest Processes.user Processes.parent_process
  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id
  | `drop_dm_object_name(Processes)` | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)
  | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | `getdomaincomputer_with_powershell_filter`'
