description: The following analytic detects when a process running with low or medium
  integrity from a user account spawns an elevated process with high or system integrity
  in suspicious locations. This behavior is identified using process execution data
  from Windows process monitoring or Sysmon EventID 1. This activity is significant
  as it may indicate a threat actor successfully elevating privileges, which is a
  common tactic in advanced attacks. If confirmed malicious, this could allow the
  attacker to execute code with higher privileges, potentially leading to full system
  compromise and persistent access.
required_fields:
- _time
- Processes.dest
- Processes.user
- Processes.parent_process_guid
- Processes.parent_process
- Processes.parent_process_name
- Processes.process_name
- Processes.process
- Processes.process_path
- Processes.process_guid
- Processes.process_integrity_level
- Processes.process_current_directory
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) as firstTime from datamodel=Endpoint.Processes
  where Processes.process_integrity_level IN ("low","medium","high") NOT Processes.user
  IN ("*SYSTEM","*LOCAL SERVICE","*NETWORK SERVICE","DWM-*","*$") by Processes.dest,
  Processes.user, Processes.parent_process_guid, Processes.parent_process, Processes.parent_process_name
  Processes.process_name Processes.process, Processes.process_path, Processes.process_guid,
  Processes.process_integrity_level, Processes.process_current_directory | `drop_dm_object_name(Processes)`
  | eval join_guid = process_guid, integrity_level = CASE(match(process_integrity_level,"low"),1,match(process_integrity_level,"medium"),2,match(process_integrity_level,"high"),3,match(process_integrity_level,"system"),4,true(),0)
  | rename user as src_user, parent_process* as orig_parent_process*, process* as
  parent_process* | join max=0 dest join_guid  [| tstats summariesonly=`summariesonly_config`
  allow_old_summaries=`oldsummaries_config` fillnull_value=`fillnull_config` count
  max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_integrity_level
  IN ("system") NOT Processes.user IN ("*SYSTEM","*LOCAL SERVICE","*NETWORK SERVICE","DWM-*","*$"))
  OR (Processes.process_integrity_level IN ("high","system") AND (Processes.parent_process_path
  IN ("*\\\\*","*\\Users\\*","*\\Temp\\*","*\\ProgramData\\*") OR Processes.process_path
  IN ("*\\\\*","*\\Users\\*","*\\Temp\\*","*\\ProgramData\\*"))) by Processes.dest,
  Processes.user, Processes.parent_process_guid, Processes.process_name, Processes.process,
  Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory
  | `drop_dm_object_name(Processes)` | eval elevated_integrity_level = CASE(match(process_integrity_level,"low"),1,match(process_integrity_level,"medium"),2,match(process_integrity_level,"high"),3,match(process_integrity_level,"system"),4,true(),0)
  | rename parent_process_guid as join_guid ] | where elevated_integrity_level > integrity_level
  OR user != elevated_user | fields dest, user, src_user, parent_process_name, parent_process,
  parent_process_path, parent_process_guid, parent_process_integrity_level, parent_process_current_directory,
  process_name, process, process_path, process_guid, process_integrity_level, process_current_directory,
  orig_parent_process_name, orig_parent_process, orig_parent_process_guid, firstTime,
  lastTime, count  | convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$)  | convert
  timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) |  `windows_privilege_escalation_suspicious_process_elevation_filter`'
