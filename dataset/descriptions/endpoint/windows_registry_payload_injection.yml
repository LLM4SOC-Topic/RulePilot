description: The following analytic detects suspiciously long data written to the
  Windows registry, a behavior often linked to fileless malware or persistence techniques.
  It leverages Endpoint Detection and Response (EDR) telemetry, focusing on registry
  events with data lengths exceeding 512 characters. This activity is significant
  as it can indicate an attempt to evade traditional file-based defenses, making it
  crucial for SOC monitoring. If confirmed malicious, this technique could allow attackers
  to maintain persistence, execute code, or manipulate system configurations without
  leaving a conventional file footprint.
required_fields:
- _time
- user
- dest
- process_id
- process_name
- process
- process_path
- parent_process_name
- parent_process
- process_guid
- registry_path
- registry_value_name
- registry_value_data
- registry_key_name
rule: '| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count min(_time) AS firstTime max(_time) AS lastTime
  FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id
  Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name
  Processes.parent_process Processes.process_guid| `drop_dm_object_name(Processes)`
  | join max=0 dest process_guid [| tstats summariesonly=`summariesonly_config` allow_old_summaries=`oldsummaries_config`
  fillnull_value=`fillnull_config` count from datamodel=Endpoint.Registry where Registry.registry_value_data=*
  by _time span=1h Registry.dest Registry.registry_path Registry.registry_value_name
  Registry.process_guid Registry.registry_value_data Registry.registry_key_name |
  `drop_dm_object_name(Registry)` | eval reg_data_len = len(registry_value_data) |
  where reg_data_len > 512] | fields firstTime lastTime dest user parent_process_name
  parent_process process_name process_path process registry_key_name registry_path
  registry_value_name registry_value_data process_guid | where isnotnull(registry_value_data)|
  convert timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$)| `windows_registry_payload_injection_filter`'
