description: This detection rule monitors for the creation of AWS Identity and Access
  Management (IAM) access keys. An IAM access key consists of an access key ID and
  secret access key, which are used to sign programmatic requests to AWS services.
  While IAM access keys can be legitimately used by developers and administrators
  for API access, their creation can also be indicative of malicious activity. Attackers
  who have gained unauthorized access to an AWS environment might create access keys
  as a means to establish persistence or to exfiltrate data through the APIs. Moreover,
  because access keys can be used to authenticate with AWS services without the need
  for further interaction, they can be particularly appealing for bad actors looking
  to operate under the radar. Consequently, it's important to vigilantly monitor and
  scrutinize access key creation events, especially if they are associated with unusual
  activity or are created by users who don't typically perform these actions. This
  hunting query identifies when a potentially compromised user creates a IAM access
  key for another user who may have higher privilleges, which can be a sign for privilege
  escalation. Hunting queries are designed to be executed manual during threat hunting.
required_fields:
- api.service.name
- api.operation
- identity.user.account_uid
- identity.user.credential_uid
- identity.user.name
- identity.user.type
- identity.user.uid
- identity.user.uuid
- http_request.user_agent
- src_endpoint.ip
- unmapped{}.key
- unmapped{}.value
rule: sourcetype=aws:cloudtrail:lake api.operation=CreateAccessKey http_request.user_agent!=console.amazonaws.com
  api.response.error=null | rename unmapped{}.key as unmapped_key , unmapped{}.value
  as unmapped_value | eval keyjoin=mvzip(unmapped_key,unmapped_value) | mvexpand keyjoin
  | rex field=keyjoin "^(?<key>[^,]+),(?<value>.*)$" | eval {key} = value | search
  responseElements.accessKey.userName = * | rename identity.user.name as identity_user_name,
  responseElements.accessKey.userName as responseElements_accessKey_userName | eval
  match=if(identity_user_name=responseElements_accessKey_userName,1,0) | search match=0
  | rename identity_user_name as identity.user.name , responseElements_accessKey_userName
  as responseElements.accessKey.userName | stats count min(_time) as firstTime max(_time)
  as lastTime by responseElements.accessKey.userName api.operation api.service.name
  identity.user.account_uid identity.user.credential_uid identity.user.name identity.user.type
  identity.user.uid identity.user.uuid http_request.user_agent src_endpoint.ip | convert
  timeformat="%Y-%m-%dT%H:%M:%S" ctime($field$) | convert timeformat="%Y-%m-%dT%H:%M:%S"
  ctime($field$) |`asl_aws_createaccesskey_filter`
